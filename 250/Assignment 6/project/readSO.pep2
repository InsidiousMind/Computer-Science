;---------------------------------------------------------------
;  address readSO()
;---------------------------------------------------------------
           .BYTE     63
value:     .BLOCK    63
;--------
length:    .BLOCK    2
ref:       .BLOCK    2
;---------------------------------------------------------------
msgtrunc:  .ASCII   "WARNING: input truncation \x00"
;---------------------------------------------------------------
           .GLOBAL   readSO
readSO:    NOP0
           CLR       ref,d
           STRI      value,i          ;|   value = nextLine();
           TSTA                       ;| + if(A > 0) {
           BREQ      move             ;| |
           STRO      msgtrunc,d       ;| |   print(msgtrunc);
           DECOA                      ;| |   print(A);
           CHARO     '\n',i           ;| |   println();
           NOP0                       ;| + }
move:      PUSH      value,i          ;| + length = Slength(value);
           CALL      Slength          ;| |
           ADDSP     2,i              ;| |
           STA       length,d         ;| +
           TSTA                       ;| + if(length != 0) {
           BREQ      done             ;| |
;---------                            ;| |
           LDA       length,d         ;| | + ref = new(length+2);
           ADDA      2,i              ;| | |
           STA       -2,s             ;| | |
           SUBSP     2,i              ;| | |
           CALL      new              ;| | |
           ADDSP     2,i              ;| | |
           STA       ref,d            ;| | +
;---------                            ;| |
           LDA       length,d         ;| | + *ref = (length++);
           INCA                       ;| | |
           STA       length,d         ;| | |
           STBYTEA   ref,n            ;| | +
           INC       ref,d            ;| |   ref = ref + 1;
;---------
;Took out code here from readStrgs
;---------                            ;| |
           LDA       length,d         ;| | + memcpy(&value,ref,length);
           STA       -2,s             ;| | |
           LDA       ref,d            ;| | |
           STA       -4,s             ;| | |
           LDA       value,i          ;| | |
           STA       -6,s             ;| | |
           SUBSP     6,i              ;| | |
           CALL      memcpy           ;| | |
           ADDSP     6,i              ;| | +
;---------                            ;| |
;---------
done:      LDA       ref,d
           RET0
